견교한 기본기 HTML&CSS

Selector
아이디 선택자 (ID Selector)
: 주의사항으로는 같은 페이지 안에 id 값은 유일해야합니다. 
즉, 만약 여러분이 id=”firstId” 라고 아이디를 작성하셨다면 firstId 라는 아이디 값은 이 HTML안에서 단 한 개만 존재해야 합니다. 
또 id 이름은 알파벳 또는 ‘_’ (언더바), ‘-’(하이픈)으로 시작해야 합니다. 
id를 이용해 css와 javascript에서 활용할 수 있으니 중요한 속성 중 하나입니다. 

a 앵커 태그 href에 id 값을 넣어주면 id가 적용된 태그로 이동시켜 줄 수 있다.. 

클래스 선택자
class ="blue" : 태그 안에 속성을 넣어줄수 있다

class ="blue bic" : 클래스는 동시에 여러가지를 가질 수 있다. blue 와 bic 같이 띄어쓰기를 해주면 
한 태그안에 2개의 클래스를 지정할 수 있다.


선택자 우선순위
1. 후자 우선의 원칙 : 동일한 선택자가 연속으로 사용되었을 경우 후자가 우선한다.

2. 구체성의 원칙 : 한 선택자가 다른 선택자 보다 더 구체적으로 작성되었다면 구체적인 선택자가 우선한다.
- p { } , p.클래명 { } 이렇게 같은 태그를 선택해도 클래스명 까지 붙여준 두번째 선택자가 우선 선택된다.  

- 구체성의 원칙은 가중치라는것을 기준으로 작동한다. id 와 class가 동시에 있을 경우에는 "id > class > 타입" 순으로
style 적용이 된다.

- 가중치 점수 (자리올림이 되지않음)
  	ㄱ. inline-style 1000점 : <h1 style="background-color: blue"><h1>
   	ㄴ. id 선택자 100점
	ㄷ. class, 가상클래스, 속성선택자 10점
	ㄹ. 타입, 가상요소 선택자 1점
	ㅁ. 전체선택자 (*) 0점


3. 중요성의 원칙
- 다른 속성보다 더 우선적으로 적용되어야할 중요한 스타일 속성이 있다면 !important 를 속성값 다음에 추가합니다.
 *important : 절대적인 우선순위. 가중치 점수를 무시하고 무족건적인 우선순위를 가진다.

--------------------------------------------------------------------
Box Model
content : 넓이는 width, 높이는 height

padding : 콘텐츠 바깥 공간

border : 보더를 감싸고 있는 라인

margin : 보더 바깥 공간


블록박스 (block)
: 자신을 감싸고 있는 컨테이너만큼 차지

- 사용 가능한 공간을 양 옆으로 100% 사용하며 사용하지 못하는 공간은 마진 영역으로 채웁니다. 
상위 콘테이너에서 사용 가능한 공간을 채웁니다.
- [width]와 [height] 속성을 사용하여 스타일을 컨트롤 할 수 있습니다.
- 패딩과 마진, 보더 속성을 사용하여 스타일을 컨트롤 할 수 있으며 해당 속성들이 다른 요소들을 밀어냅니다.


인라인 박스 (inline)
: 자신의 필요한 부문만 차지

- 기본적으로 컨텐츠 박스만큼의 크기만 가집니다. 때문에 새 줄로 행을 바꾸지 않습니다.
- [width]와 [height] 속성을 사용할 수 없습니다.
- 패딩과 , 보더 속성을 사용할 수 있지만 마진 속성은 좌우만 조절할 수 있습니다. 
해당 속성들의 상하 값(top, bottom)들은 다른 요소들을 밀어내지 않습니다.

박스의 유형을 결정하는 속성 : display
: css 속성으로 "인라인 박스 -> 블록박스" 이와 같이 박스의 유형을 바꿀 수 있다 

display 속성은 박스의 성질을 지정하여 다른 박스들과 어떤 방식으로 위치가 배치 될지 결정합니다. 

display 속성은 크게 외부의 다른 형제, 부모 박스들과의 배치에 영향을 미치는 외부 디스플레이 타입과, 
내부 자식 박스들의 배치에 영향을 미치는 내부 디스플레이 타입으로 크게 나눌 수 있습니다.

외부 디스플레이 타입
inline : 인라인 박스로 박스의 유형을 결정한다.
div {
      display: inline
}

block: 블록 박스로 박스의 유형을 결정합니다
div {
      display: block
}

inline-block : inline 처럼 한줄에 여러 요소가 존재 할 수 있다. block 처럼 width, height, margin, padding등
모든 값을 지정할 수 있다.
div {
      display: inline-block
}


내부 디스플레이 타입
flex
:내부 자식 요소들의 위치를 부모 컨테이너 요소안에서 X축 혹은 Y축의 단방향으로 설정하는 속성입니다.

grid
:내부 자식 요소들의 위치를 부모 컨테이너 요소안에서 X축과 Y축을 모두 이용해 배치하는 속성입니다.


-------------------------------------
Box Model 2

border-color : red;  - 라인을 빨간선으로 만들어줌

border-color : red green; - red가 위 아래, green이 좌우

border-color : red green blue; - 위가 red, 좌우가 green, 아래가 blue

border-color : red green blue black; - 상 우 하 좌  시계방향으로 색이 적용됨

-----------------------------------------
Box Model 3

margin - 상하 에는 auto 값을 줄수 없다. margin: auto 0; 이런식으로 사용해야함

overflow
: 부모의 영역을 자식이 넘어갔을때 어떻게 처리할지를 결정하는 속성

마진겹침현상 해결

hidden  - 자식이 부모의 영역에 넘어오는만큼 자른다 (자식의 요소가 넘치는걸 잘라내줌)

display: inline-block  - 요소의 컨텐츠 넓이만큼 차지하게 만들어줌

border: 1px solid black - 해결은 되는데 비추 의도하지않은 디자인이 생김

------------------------
대체 박스 모델 : width는 페이지에서 차지하는 박스 너비가 되고 height는 박스의 높이가 된다.
대체박스 모델을 사용하게 되면 매우 직관적으로 요소의 크기를 설정하는 것이 가능하기 때문에
널리 사용되는 방법이기도 하다.

box-sizing
: box-sizing 속성을 통해 표준 박스 모델을 대체 박스 모델로 변경 할 수 있다.































