flex란?
display 속성으로, 내부 자식 박스들의 배치에 영향을 미치는 내부 디스플레이 타입 중 하나입니다


기본 속성 정보
1. 새로운 display 속성입니다.
display:flex;
display:inline-flex;

2. Block 레벨 요소의 성질을 가지며 주로 부모의 속성을 통해 자식들을 컨트롤 합니다. 
이때 부모를 Flex-container, 영향을 받는 자식들을 Flex-item이라고 부릅니다.

3. flex는 자신의 직계자식까지만 영향을 미칩니다.


flex-container에 사용하는 속성

주축과 정렬 방향
flex-container는 기본적으로 주축(axis)를 가지며 기본 방향은 왼쪽에서 오른쪽을 향합니다.
주축이 시작하는 시작점을 flex-start, 중간을 center, 끝나는 곳을 flex-end 라고 명명합니다.


flex-direction
flex-container가 사용할 주축과 정렬 방향을 결정합니다.

row : 기본값이고 아이템을 가로(행)방향으로 흐르게한다.

row-reverse : 주축을 행 방향으로 하되 축의 시작점을 역전합니다.
즉, flex-direction : row 였을때의 flex-start가 flex-end로 변경됩니다.

column : 아이템이 세로(열)방향으로 흐른다. (상에서 하로)

column-reverse : 주축을 열 방향으로 하되 축의 시작점을 역전합니다.
즉, flex-direction : column 이었을때의 flex-start가 flex-end로 변경됩니다.


justify-content
주축(Axis)을 기준으로 배열의 위치를 조종하거나 아이템 간의 간격을 설정할 수 있습니다.

flex-start : 왼쪽을 주축으로 시작하여 아이템이 배치된다 (기본값)

flex-end : 시작점이 flex-end로 변경됩니다.오른쪽을 주축으로 시작하여 아이템이 위치한다

center : 가운데에 아이템이 정렬된다

space-between : box 간에만 공백을 주고 양 끝은 공백없이 배치
(아이템들의 “사이(between)”에 균일한 간격을 만들어 줍니다.)

space-around : space가 겹치는 부분(box들 간 간격)과 겹치지 않는 부분은 공백 너비가 달라진다.
(아이템들에 균일한 동일한 간격을 만들어 줍니다)

space-evenly : 전체영역 동일한 공백이 주어진다
(아이템들의 사이와 양 끝에 균일한 간격을 만들어 줍니다.
주의! IE와 엣지(Edge)에서는 지원되지 않습니다👎
이 웹사이트의 메뉴 부분은 브라우저 폭이 1024px 이상일 때 space-evenly가 적용되도록 했는데요, 
IE와 엣지에서만 space-around로 적용이 되도록 처리해 두었어요.)

*space는 column 세로축으로 흐르게했을때 높이를 주지않으면 공간이 없어 여백을 만들지 못한다

----------------------------------------------
Axis 와 Cross-Axis
flex에는 axis와 짝을 이루는 cross-axis가 존재합니다. 
axis가 row 상태라면 cross-axis는 column 이고, axis 가 column 이면 cross-axis는 row 인 상태죠.

align-items, align-content
- align-items : cross-axis를 기준으로 이동합니다.
- align-content : flex-container의 cross-axis 축의 아이템들이 여러 줄일 때 사용 가능합니다. 
따라서 두 줄의 flex-wrap:wrap인 상태에서 사용해야 합니다.

align-items
아이템들을 주축에 상대적인 교차축 방향으로 배치한다

align-items: stertch(기본값) : 아이템들이 주축방향으로 끝까지 쭉 늘어난다.
(Axis 와 Cross-Axis 맞춰 적용된다. Axis가 row 방향이면 Cross-Axis가 column 방향을 주축으로 사용됨)
align-items: center : 가운대로 정렬된다 row가 주축이면 가로로 column이 주축이면 세로로
align-items: flex-start : 아이템들이 교차축이 시작되는 지점으로
align-items: flex-end : 아이템들이 교차축이 끝나는 지점으로

*align-items 에서는 spaec 를 사용할 수 없다 align 에서 사용 하려면
 align-content를 사용해야한다.

flex-wrap
flex-container는 flex-item 넓이의 합이 컨테이너보다 크다고 해서 강제로 flex-item의 넓이를 조절하지 않습니다.
때문에 자식요소를 감싸서 부모의 넓이에 따라 자식들을 줄바꿈하도록 하는 기능이 필요한데, 그것이 바로 flex-wrap 
입니다. 마치 float 속성이 적용된 자식 요소들이 부모의 넓이 따라 아래로 떨어지는 모습과 유사합니다.

flex-wrap: nowrap; (기본값)
flex-wrap: wrap (flex-wrap사용) # 아이템들이 부모의 넓이에 따라 아래로 떨어진다.
flex-wrap: wrap-reverse # 반대로 위로 올라간다

flex-flow
flex-direction과 flex-wrap은 같이 사용하는 일이 많기 때문에 flex-flow 속성을 통해 단축하여 사용할 수 있습니다. 
.container {
  display: flex;
	flex-flow: wrap column;  <- 값을 보면 wrap과 column 두개값이 쓰여진것을 볼 수 있음
	/* flex-wrap: wrap; flex-direction: column; 이 두가지를 쓴것과 동일합니다. */
}

--------------------------------------------------
flex-item
flex-container의 자식들 이라고 보면 된다.
flex-container의 상태에 따라 flex-item의 레이아웃을 결정하는 속성들이다.

flex-basis
:flex-item의 크기를 지정합니다. width, height와 다른점은 axis 방향에 따라 달라진다는 것 
그리고 내부의 컨텐츠에 따른 유연한 크기입니다. 기본값은 auto입니다.
(width값으로 넓이를 주었을때 텍스트를 주면 부모요소를 넘어간다, 
basis로 값을 주면 item의 넓이가 텍스트에 맞춰 유동적으로 늘어난다)
만약 flex-basis 값이 적용되어 있다면 width, height 값은 무시됩니다.

flex-grow
:flex-basis의 값에서 더 늘어나도 되는지 지정하는 값으로, 
할당된 값에 따라 flex-container의 남은 여백을 할당하도록 합니다.

flex-grow  : 1 → 자식 요소들이 모두 동일한 크기의 공간을 할당받습니다.
(부모가 가진 크기(여백)를 전부사용해서 늘어남)

flex-grow  : 2  →  특정한 하나의 자식에게만 줄 경우 다른 자식요소보다 두배의 여백 공간을 할당받습니다.
(다른 item들 보다 2배 가 커진다)
만약 자식요소들의 컨텐츠 크기가 존재한다면 그 컨텐츠의 넓이에 따라 할당받는 값이 달라집니다.
(basis로 넓이가 있는 경우 basis + grow 로 넓이가 된다 basis 와 grow의 공간이 따로잡힌다)


flex-basis:0을 주게 되면 여백 공간이 아니라 전체 공간을 분할합니다. (기본값)



flex-shrink
flex-grow에 반대되는 개념으로 컨테이너의 공간이 줄어들때 flex-basis의 값에서 더 줄어들어도 되는지 지정하는 값입니다. 
크기를 고정하거나 줄이는 역할을 합니다.

0의 값을 사용할 경우 컨테이너의 크기가 줄어도 값은 고정됩니다. 마이너스 숫자는 사용할 수 없으며 기본값은 1입니다.
(shrink값이 0이고 basis 값이 지정되있을경우 창을 줄여도 item 크기가 basis로 정한 값보다 줄어들지 않는다)
(shrink의 기본값은 1이고 따로 작성하지않아도 1이 적용되어있다) 


지금까지 배운 basis, grow, shrink 속성의 값을 축약하여 사용할 수 있는 것이 바로 flex속성입니다. 

```css
/* flex: flex-grow, flex-shrink, flex-basis */
flex :2;         /* flex-grow:2; flex-shrink:1; flex-basis:0; */    #shrink 와 basis는 기본값
flex :1 1;       /* flex-grow:1; flex-shrink:1; flex-basis:0; */  
flex :2 300px;   /* flex-grow:2; flex-shrink:1; flex-basis:300px; */  
flex :1 1 300px; /* flex-grow:1; flex-shrink:1; flex-basis:300px; */
```


그 밖의 flex-item 에 사용하는 속성들

align-self : 부모의 align-items 속성을 덮어 flex-item 에게 개별적인 align-items 속성을 부여합니다. 
기본값은 align-items와 마찬가지로 stretch 입니다.

order: flex-item 들의 순서를 결정합니다. 수의 의미로 순서를 결정하지 않습니다. 
수의 크기로 결정합니다. 수가 작을 수록 더 우선 순위를 부여 받습니다. (음수도 사용이 가능합니다.)










